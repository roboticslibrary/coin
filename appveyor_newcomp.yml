version: 4.0.0-{branch}-ci-{build}

branches:
  only:
    - default

#shallow clone does not work when subrepos are involved!
#shallow_clone: true

skip_commits:
  files:
    - appveyor_oldcomp.yml

environment:
  BB_AUTH_STRING:
    secure: IyP2dNdsGf1iao8XFeiu7R8Fk+ZWBYd4vJlHZv1XcLy6KWcwSxLtjHZsTUSoiV/e

  matrix:
#    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
#      CMAKE_GENERATOR: 'Unix Makefiles'
#      CMAKE_PLATFORM: x86
#      CMAKE_ARCH_FLAGS: -m32
#      COMPILER_ID: gcc5
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Ubuntu
#      CMAKE_GENERATOR: 'Unix Makefiles'
#      CMAKE_PLATFORM: x64
#      CMAKE_ARCH_FLAGS: -m64
#      COMPILER_ID: gcc5
#
# older compiler are supported in a separate appveyor project
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
#      CMAKE_GENERATOR: 'Visual Studio 10 2010'
#      CMAKE_ARCHITECTURE: Win32
#      CMAKE_PLATFORM: x86
#      COMPILER_ID: msvc10
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
#      CMAKE_GENERATOR: 'Visual Studio 10 2010'
#      CMAKE_ARCHITECTURE: x64
#      CMAKE_PLATFORM: x64
#      COMPILER_ID: msvc10
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
#      CMAKE_GENERATOR: 'Visual Studio 14 2015'
#      CMAKE_ARCHITECTURE: Win32
#      CMAKE_PLATFORM: x86
#      COMPILER_ID: msvc14
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2015
#      CMAKE_GENERATOR: 'Visual Studio 14 2015'
#      CMAKE_ARCHITECTURE: x64
#      CMAKE_PLATFORM: x64
#      COMPILER_ID: msvc14
#
    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: 'Visual Studio 15 2017'
      CMAKE_ARCHITECTURE: Win32
      CMAKE_PLATFORM: x86
      COMPILER_ID: msvc15

    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
      CMAKE_GENERATOR: 'Visual Studio 15 2017'
      CMAKE_ARCHITECTURE: x64
      CMAKE_PLATFORM: x64
      COMPILER_ID: msvc15

#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
#      CMAKE_GENERATOR: 'Visual Studio 16 2019'
#      CMAKE_ARCHITECTURE: Win32
#      CMAKE_PLATFORM: x86
#      COMPILER_ID: msvc16
#
#    - APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2019
#      CMAKE_GENERATOR: 'Visual Studio 16 2019'
#      CMAKE_ARCHITECTURE: x64
#      CMAKE_PLATFORM: x64
#      COMPILER_ID: msvc16

install:
  - sh: |
      if [ "$CMAKE_PLATFORM" == "x86" ]
      then
        sudo apt-get install freeglut3-dev:i386 -y
      elif [ "$CMAKE_PLATFORM" == "x64" ]
      then
        sudo apt-get install freeglut3-dev -y
      fi
      sudo apt-get install doxygen -y
      sudo apt-get install gcc-multilib -y
      sudo apt-get install g++-multilib -y
  - cmd: |
      set PATH=%APPVEYOR_BUILD_FOLDER%\downloads\doxygen-1.8.14;%APPVEYOR_BUILD_FOLDER%\downloads\cmake-3.14.5-win64-x64\bin;%PATH%

before_build:
  - cmd: |
      set BUILD_SOURCE_ARCHIVE=%APPVEYOR_PROJECT_NAME%-4.0.0-src.zip
      7z a -tzip %BUILD_SOURCE_ARCHIVE% %APPVEYOR_BUILD_FOLDER%
      appveyor PushArtifact %BUILD_SOURCE_ARCHIVE%
      mkdir %APPVEYOR_BUILD_FOLDER%\downloads
      set DOWNLOAD_FILE_DOXYGEN=doxygen-1.8.14.windows.x64.bin.zip
      set DOWNLOAD_ADDRESS_DOXYGEN=https://sourceforge.net/projects/doxygen/files/rel-1.8.14/%DOWNLOAD_FILE_DOXYGEN%
      curl -fsSL -G -o "%DOWNLOAD_FILE_DOXYGEN%" "%DOWNLOAD_ADDRESS_DOXYGEN%"
      7z x %DOWNLOAD_FILE_DOXYGEN% -o%APPVEYOR_BUILD_FOLDER%\downloads\doxygen-1.8.14
      doxygen --version
      set DOWNLOAD_FILE_SUPERGLU=superglu-1.3.0-%COMPILER_ID%-%CMAKE_PLATFORM%.zip
      set DOWNLOAD_ADDRESS_SUPERGLU=https://bitbucket.org/Coin3D/superglu/downloads/%DOWNLOAD_FILE_SUPERGLU%
      curl -fsSL -G -o "%DOWNLOAD_FILE_SUPERGLU%" "%DOWNLOAD_ADDRESS_SUPERGLU%"
      7z x %DOWNLOAD_FILE_SUPERGLU% -o%APPVEYOR_BUILD_FOLDER%\downloads
      set DOWNLOAD_FILE_CMAKE=cmake-3.14.5-win64-x64.zip
      set DOWNLOAD_ADDRESS_CMAKE=https://github.com/Kitware/CMake/releases/download/v3.14.5/%DOWNLOAD_FILE_CMAKE%
      curl -fsSL -G -o "%DOWNLOAD_FILE_CMAKE%" "%DOWNLOAD_ADDRESS_CMAKE%"
      7z x %DOWNLOAD_FILE_CMAKE% -o%APPVEYOR_BUILD_FOLDER%\downloads
      cmake -H. -Bbuild -G "%CMAKE_GENERATOR%" -A %CMAKE_ARCHITECTURE% -DCMAKE_INSTALL_PREFIX=%APPVEYOR_BUILD_FOLDER%\Coin3D -DCMAKE_PREFIX_PATH=%APPVEYOR_BUILD_FOLDER%\downloads\Coin3D -DBOOST_ROOT=C:\Libraries\boost_1_69_0
  - sh: |
      BUILD_SOURCE_ARCHIVE=$APPVEYOR_PROJECT_NAME-4.0.0-src.tar.gz
      tar -czvf $BUILD_SOURCE_ARCHIVE $APPVEYOR_BUILD_FOLDER/*
      appveyor PushArtifact $BUILD_SOURCE_ARCHIVE
      mkdir $APPVEYOR_BUILD_FOLDER/downloads
      export CFLAGS=$CMAKE_ARCH_FLAGS
      export CXXFLAGS=$CMAKE_ARCH_FLAGS
      cmake -H. -Bbuild_debug   -G "$CMAKE_GENERATOR" -A $CMAKE_ARCHITECTURE -DCMAKE_BUILD_TYPE=Debug   -DCMAKE_POSITION_INDEPENDENT_CODE=true -DCMAKE_INSTALL_PREFIX=$APPVEYOR_BUILD_FOLDER/Coin3D -DCMAKE_PREFIX_PATH=$APPVEYOR_BUILD_FOLDER/downloads/Coin3D
      cmake -H. -Bbuild_release -G "$CMAKE_GENERATOR" -A $CMAKE_ARCHITECTURE -DCMAKE_BUILD_TYPE=Release -DCMAKE_POSITION_INDEPENDENT_CODE=true -DCMAKE_INSTALL_PREFIX=$APPVEYOR_BUILD_FOLDER/Coin3D -DCMAKE_PREFIX_PATH=$APPVEYOR_BUILD_FOLDER/downloads/Coin3D

build_script:
  - cmd: |
      set BUILD_TOOL_OPTIONS=/nologo /verbosity:minimal /maxcpucount
      cmake --build build --target INSTALL --config Debug   -- %BUILD_TOOL_OPTIONS%
      cmake --build build --target INSTALL --config Release -- %BUILD_TOOL_OPTIONS%
  - sh: |
      BUILD_TOOL_OPTIONS=-j4
      cmake --build build_debug   --target install --config Debug   -- $BUILD_TOOL_OPTIONS
      cmake --build build_release --target install --config Release -- $BUILD_TOOL_OPTIONS

after_build:
  - cmd: |
      cd %APPVEYOR_BUILD_FOLDER%
      set BUILD_ARCHIVE=%APPVEYOR_PROJECT_NAME%-4.0.0-%COMPILER_ID%-%CMAKE_PLATFORM%.zip
      7z a -tzip %BUILD_ARCHIVE% Coin3D
      appveyor PushArtifact %BUILD_ARCHIVE%
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER
      BUILD_ARCHIVE=$APPVEYOR_PROJECT_NAME-4.0.0-$COMPILER_ID-$CMAKE_PLATFORM.tar.gz
      tar -czvf $BUILD_ARCHIVE Coin3D/*
      appveyor PushArtifact $BUILD_ARCHIVE

test_script:
  - cmd: |
      cd build
      ctest -C Release -VV
  - sh: |
      cd build_release
      ctest -C Release -VV

on_success:
  - cmd: |
      cd %APPVEYOR_BUILD_FOLDER%
      curl --user %BB_AUTH_STRING% https://api.bitbucket.org/2.0/repositories/Coin3D/coin/downloads --form files=@%BUILD_ARCHIVE% --form files=@%BUILD_SOURCE_ARCHIVE%
  - sh: |
      cd $APPVEYOR_BUILD_FOLDER
      curl --user $BB_AUTH_STRING  https://api.bitbucket.org/2.0/repositories/Coin3D/coin/downloads --form files=\@$BUILD_ARCHIVE --form files=\@$BUILD_SOURCE_ARCHIVE

notifications:
  - provider: Email
    to:
      - '{{commitAuthorEmail}}'
      - coin-support@coin3d.org
    on_build_success: false
    on_build_failure: true
    on_build_status_changed: true
